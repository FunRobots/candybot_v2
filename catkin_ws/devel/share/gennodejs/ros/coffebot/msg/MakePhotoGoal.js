// Auto-generated. Do not edit!

// (in-package coffebot.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;
let MakePhoto = require('./MakePhoto.js');

//-----------------------------------------------------------

class MakePhotoGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.make_photo_command = null;
    }
    else {
      if (initObj.hasOwnProperty('make_photo_command')) {
        this.make_photo_command = initObj.make_photo_command
      }
      else {
        this.make_photo_command = new MakePhoto();
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type MakePhotoGoal
    // Serialize message field [make_photo_command]
    bufferOffset = MakePhoto.serialize(obj.make_photo_command, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type MakePhotoGoal
    let len;
    let data = new MakePhotoGoal(null);
    // Deserialize message field [make_photo_command]
    data.make_photo_command = MakePhoto.deserialize(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    length += MakePhoto.getMessageSize(object.make_photo_command);
    return length;
  }

  static datatype() {
    // Returns string type for a message object
    return 'coffebot/MakePhotoGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '00b32418588cddf81e8ce2583c63f170';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    #goal
    MakePhoto make_photo_command
    
    ================================================================================
    MSG: coffebot/MakePhoto
    #message for command to make photo
    
    bool make_photo
    string photo_file_name
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new MakePhotoGoal(null);
    if (msg.make_photo_command !== undefined) {
      resolved.make_photo_command = MakePhoto.Resolve(msg.make_photo_command)
    }
    else {
      resolved.make_photo_command = new MakePhoto()
    }

    return resolved;
    }
};

module.exports = MakePhotoGoal;
